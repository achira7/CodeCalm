import React, { useEffect, useState } from "react";

import jsPDF from "jspdf";
import html2canvas from "html2canvas";

export const downloadPDF = async ({componenetName, team, name, userRole, orientation, generatedBy}) => {
    /*await axios.post("http://localhost:8000/api/report/", {
        downloaded_by: userID,
    })*/
  
    const timestamp = new Date().toISOString();
  
    const input = document.getElementById(`${componenetName} report-content`);
  
    html2canvas(input, { scale: 1 })
      .then((canvas) => {
        const imgData = canvas.toDataURL("image/png");
        const pdf = new jsPDF(`${orientation}`, "mm"); 
        const imgWidth = pdf.internal.pageSize.getWidth();
        const imgHeight = (canvas.height * imgWidth) / canvas.width;
  
        pdf.addImage(imgData, "PNG", 0, 20, imgWidth, imgHeight);
  
        pdf.setFont("helvetica");
        pdf.setFontSize(10);
        pdf.setTextColor(0, 0, 255);
  
        if (team) {
          pdf.text(`Team ${team} ${componenetName} Report`, 10, 10);
        } else {
          pdf.text(`${componenetName}`, 10, 10);
        }
  
        pdf.setTextColor(0, 0, 0);
        pdf.text(`Generated on: ${timestamp}`, 10, 15);
        pdf.text(`Generated By: ${userRole} - ${generatedBy}`, 10, 20);
  
        if (team) {
          pdf.save(`team_${team}_${componenetName} report_${timestamp}.pdf`);
        } else {
          pdf.save(`${componenetName} report_${timestamp}.pdf`);
        }
      })
      .catch((error) => {
        console.error("Error generating PDF:", error);
      });
  };